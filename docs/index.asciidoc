// Generated documentation. Please do not edit.
:anchor_prefix: k8s-api

[id="{p}-api-reference"]
= API Reference

.Packages
- xref:{anchor_prefix}-operators-apache-io-v1alpha1[$$operators.apache.io/v1alpha1$$]


[id="{anchor_prefix}-operators-apache-io-v1alpha1"]
== operators.apache.io/v1alpha1

Package v1alpha1 contains API Schema definitions for the operators v1alpha1 API group

.Resource Types
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems[$$SortablePinotItems$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotlist[$$PinotList$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-table[$$Table$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablelist[$$TableList$$]


=== Definitions

[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-brokerconfiguration"]
==== BrokerConfiguration 

BrokerConfiguration defines the k8s spec configuration for the Pinot broker

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`CommonResourceConfiguration`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-commonresourceconfiguration[$$CommonResourceConfiguration$$]__ | 
| *`jvmOptions`* __string__ | Extra JVM parameters to be passed to the controller service
| *`service`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serviceresourceconfiguration[$$ServiceResourceConfiguration$$]__ | 
| *`externalService`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-externalserviceresourceconfiguration[$$ExternalServiceResourceConfiguration$$]__ | 
|===




[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-commonresourceconfiguration"]
==== CommonResourceConfiguration 

CommonResourceConfiguration defines basic K8s resource spec configurations

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-brokerconfiguration[$$BrokerConfiguration$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-controllerconfiguration[$$ControllerConfiguration$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serverconfiguration[$$ServerConfiguration$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`resources`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core[$$ResourceRequirements$$]__ | 
| *`nodeSelector`* __object (keys:string, values:string)__ | Node selector to be used by Pinot statefulsets
| *`affinity`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core[$$Affinity$$]__ | Affinity scheduling rules to be applied on created Pods.
| *`tolerations`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core[$$Toleration$$] array__ | Tolerations is the list of Toleration resources attached to each Pod in the Pinot cluster.
| *`podAnnotations`* __object (keys:string, values:string)__ | PoAnnotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
| *`podManagementPolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podmanagementpolicytype-v1-apps[$$PodManagementPolicyType$$]__ | PodManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
| *`podLabels`* __object (keys:string, values:string)__ | Custom labels to be populated in Pinot pods
| *`securityContext`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#securitycontext-v1-core[$$SecurityContext$$]__ | Defines privilege and access control settings for a Pod or Container
| *`replicaCount`* __integer__ | Replicas is the number of nodes in the service. Each node is deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are tested. This value should be an odd number to ensure the resultant cluster can establish exactly one quorum of nodes in the event of a fragmenting network partition.
| *`env`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#envvar-v1-core[$$EnvVar$$] array__ | Extra environment variables to pass to the service
| *`rollingDeploy`* __boolean__ | If set to true then operator checks the rollout status of previous version StateSets before updating next. Used only for updates.
| *`updateStrategy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#statefulsetupdatestrategy-v1-apps[$$StatefulSetUpdateStrategy$$]__ | UpdateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
| *`livenessProbe`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#probe-v1-core[$$Probe$$]__ | Describes a health check to be performed against a container to determine whether it is alive or not
| *`readinessProbe`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#probe-v1-core[$$Probe$$]__ | Describes a health check to be performed against a container to determine whether it is ready to receive traffic or not
| *`volumeClaimTemplates`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#persistentvolumeclaim-v1-core[$$PersistentVolumeClaim$$] array__ | VolumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
| *`volumeMounts`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core[$$VolumeMount$$] array__ | Describes a mounting of a Volume within a container
| *`volumes`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core[$$Volume$$] array__ | Represents a named volume in a pod that may be accessed by any container in the pod
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-controllerconfiguration"]
==== ControllerConfiguration 

ControllerConfiguration defines the k8s spec configuration for the Pinot controller

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`CommonResourceConfiguration`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-commonresourceconfiguration[$$CommonResourceConfiguration$$]__ | 
| *`diskSize`* __string__ | Size of the persisten disk for the controller service
| *`jvmOptions`* __string__ | Extra JVM parameters to be passed to the controller service
| *`vip.host`* __string__ | 
| *`vip.port`* __integer__ | 
| *`service`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serviceresourceconfiguration[$$ServiceResourceConfiguration$$]__ | 
| *`externalService`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-externalserviceresourceconfiguration[$$ExternalServiceResourceConfiguration$$]__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-datetimefieldspec"]
==== DatetimeFieldSpec 

DatetimeFieldSpec represents time columns in the data. There can be multiple time columns in a table, but only one of them can be treated as primary. Primary time column is the one that is present in the segment config.

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`format`* __string__ | 
| *`granularity`* __string__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-dimensionfieldspec"]
==== DimensionFieldSpec 

DimensionFieldSpec is typically used in slice and dice operations for answering business queries

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]
****



[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-externalserviceresourceconfiguration"]
==== ExternalServiceResourceConfiguration 

ExternalServiceResourceConfiguration defines some definition for a service resource

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-brokerconfiguration[$$BrokerConfiguration$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-controllerconfiguration[$$ControllerConfiguration$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`enabled`* __boolean__ | Whether enabling the external service or not
| *`annotations`* __object (keys:string, values:string)__ | Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
| *`type`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#servicetype-v1-core[$$ServiceType$$]__ | Type of Service to create for the cluster. Must be one of: ClusterIP, LoadBalancer, NodePort. For more info see https://pkg.go.dev/k8s.io/api/core/v1#ServiceType
| *`port`* __integer__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-metricfieldspec"]
==== MetricFieldSpec 

MetricFieldSpec represents the quantitative data of the table. Such columns are used for aggregation. In data warehouse terminology, these can also be referred to as fact or measure columns

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]
****



[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-namespacedname"]
==== NamespacedName 

NamespacedName contains reference to a resource

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantspec[$$TenantSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`namespace`* __string__ | 
| *`name`* __string__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotlist"]
==== PinotList 

PinotList contains a list of Pinot



[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `operators.apache.io/v1alpha1`
| *`kind`* __string__ | `PinotList`
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | Embedded metadata identifying a Kind and API Verison of an object. For more info, see: https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#TypeMeta
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#listmeta-v1-meta[$$ListMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`items`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems[$$SortablePinotItems$$]__ | Array of Pinot resources.
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec"]
==== PinotSpec 

PinotSpec defines the desired state of Pinot

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems[$$SortablePinotItems$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`clusterName`* __string__ | Required: cluster name for the pinot deployment
| *`version`* __PinotVersion__ | 
| *`image`* __string__ | Image is the name of the Apache Pinot docker image to use for Brokers/Coordinator/Server nodes in the Pinot cluster. Must be provided together with ImagePullSecrets in order to use an image in a private registry.
| *`imagePullSecrets`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#localobjectreference-v1-core[$$LocalObjectReference$$]__ | List of Secret resource containing access credentials to the registry for the Apache Pinot image. Required if the docker registry is private.
| *`imagePullPolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#pullpolicy-v1-core[$$PullPolicy$$]__ | Image pull policy for the docker image
| *`log4j.path`* __string__ | Log4j config file directory
| *`controller`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-controllerconfiguration[$$ControllerConfiguration$$]__ | The desired state of the Controller service to create for the cluster.
| *`broker`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-brokerconfiguration[$$BrokerConfiguration$$]__ | The desired state of the Broker service to create for the cluster.
| *`server`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serverconfiguration[$$ServerConfiguration$$]__ | The desired state of the Server service to create for the cluster.
| *`zookeeper`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-zookeeperconfiguration[$$ZookeeperConfiguration$$]__ | The desired state of the Zookeeper service to create for the cluster.
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotstatus"]
==== PinotStatus 

PinotStatus defines the observed state of Pinot

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems[$$SortablePinotItems$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`Status`* __ConfigState__ | 
| *`ErrorMessage`* __string__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schema"]
==== Schema 

Schema is the Schema for the schemas API

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemalist[$$SchemaList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | 
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]__ | 
| *`status`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemastatus[$$SchemaStatus$$]__ | 
|===




[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec"]
==== SchemaSpec 

SchemaSpec defines the desired state of Schema

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schema[$$Schema$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`name`* __string__ | Name of the schema
| *`primaryKeys`* __string array__ | PrimaryKeys is a list of columns that are set as primary keys
| *`dimensions`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-dimensionfieldspec[$$DimensionFieldSpec$$] array__ | Dimensions is a list of fields that represents the dimensions in the schema ref: https://docs.pinot.apache.org/basics/components/schema#categories
| *`metrics`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-metricfieldspec[$$MetricFieldSpec$$] array__ | Metrics is a list of fields that represents the metrics in the schema ref: https://docs.pinot.apache.org/basics/components/schema#categories
| *`dateTimes`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-datetimefieldspec[$$DatetimeFieldSpec$$] array__ | DateTimes is a list of fields that represents the datetimes in the schema ref: https://docs.pinot.apache.org/basics/components/schema#categories
| *`timeField`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timefieldspec[$$TimeFieldSpec$$]__ | TimeField represents the granularity
| *`pinotServer`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-namespacedname[$$NamespacedName$$]__ | 
| *`labels`* __object (keys:string, values:string)__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemastatus"]
==== SchemaStatus 

SchemaStatus defines the observed state of Schema

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schema[$$Schema$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`Status`* __ConfigState__ | 
| *`ErrorMessage`* __string__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serverconfiguration"]
==== ServerConfiguration 

ServerConfiguration defines the k8s spec configuration for the Pinot server

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`CommonResourceConfiguration`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-commonresourceconfiguration[$$CommonResourceConfiguration$$]__ | 
| *`diskSize`* __string__ | Size of the persisten disk for the server service
| *`jvmOptions`* __string__ | Extra JVM parameters to be passed to the controller service
| *`service`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serviceresourceconfiguration[$$ServiceResourceConfiguration$$]__ | 
| *`adminPort`* __integer__ | Service port for the service controller
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serviceresourceconfiguration"]
==== ServiceResourceConfiguration 

ServiceResourceConfiguration defines some definition for a service resource

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-brokerconfiguration[$$BrokerConfiguration$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-controllerconfiguration[$$ControllerConfiguration$$]
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-serverconfiguration[$$ServerConfiguration$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`annotations`* __object (keys:string, values:string)__ | Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
| *`type`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#servicetype-v1-core[$$ServiceType$$]__ | Type of Service to create for the cluster. Must be one of: ClusterIP, LoadBalancer, NodePort. For more info see https://pkg.go.dev/k8s.io/api/core/v1#ServiceType
| *`port`* __integer__ | 
| *`nodePort`* __integer__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems"]
==== SortablePinotItems 



.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotlist[$$PinotList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `operators.apache.io/v1alpha1`
| *`kind`* __string__ | `Pinot`
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | Embedded metadata identifying a Kind and API Verison of an object. For more info, see: https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#TypeMeta
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]__ | Spec is the desired state of the Pinot Custom Resource.
| *`status`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotstatus[$$PinotStatus$$]__ | Status presents the observed state of Pinot
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-sortablepinotitems"]
==== SortablePinotItems 



.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotlist[$$PinotList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `operators.apache.io/v1alpha1`
| *`kind`* __string__ | `Pinot`
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | Embedded metadata identifying a Kind and API Verison of an object. For more info, see: https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#TypeMeta
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]__ | Spec is the desired state of the Pinot Custom Resource.
| *`status`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotstatus[$$PinotStatus$$]__ | Status presents the observed state of Pinot
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-table"]
==== Table 

Table is the Schema for the tables API

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablelist[$$TableList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `operators.apache.io/v1alpha1`
| *`kind`* __string__ | `Table`
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | 
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablespec[$$TableSpec$$]__ | 
| *`status`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablestatus[$$TableStatus$$]__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablelist"]
==== TableList 

TableList contains a list of Table



[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `operators.apache.io/v1alpha1`
| *`kind`* __string__ | `TableList`
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | 
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#listmeta-v1-meta[$$ListMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`items`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-table[$$Table$$]__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tablespec"]
==== TableSpec 

TableSpec defines the desired state of Table

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-table[$$Table$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`foo`* __string__ | Foo is an example field of Table. Edit Table_types.go to remove/update
|===




[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenant"]
==== Tenant 

Tenant is the Schema for the Tenants API

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantlist[$$TenantList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`TypeMeta`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#typemeta-v1-meta[$$TypeMeta$$]__ | 
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantspec[$$TenantSpec$$]__ | 
| *`status`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantstatus[$$TenantStatus$$]__ | 
|===




[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantspec"]
==== TenantSpec 

TenantSpec defines the desired state of Tenant

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenant[$$Tenant$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`role`* __string__ | The tenant role to be used
| *`name`* __string__ | Name of the tenant
| *`numberOfInstances`* __integer__ | Number of instances to be associated with the tenant. It is used only when creating a tenant with Role Broker
| *`offlineInstances`* __integer__ | Number of Offline instances to be associted with the tenant. It is used only when creating a tenant with Role Server
| *`realtimeInstances`* __integer__ | Number of Realtime instances to be associted with the tenant. It is used only when creating a tenant with Role Server
| *`pinotServer`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-namespacedname[$$NamespacedName$$]__ | 
| *`labels`* __object (keys:string, values:string)__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenantstatus"]
==== TenantStatus 

TenantStatus defines the observed state of Tenant

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-tenant[$$Tenant$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`Status`* __ConfigState__ | 
| *`ErrorMessage`* __string__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timefieldspec"]
==== TimeFieldSpec 

TimeFieldSpec represents the granularity for both ingestion and query segments

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-schemaspec[$$SchemaSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`incomingGranularity`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timegranularityspec[$$TimeGranularitySpec$$]__ | 
| *`outgoingGranularity`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timegranularityspec[$$TimeGranularitySpec$$]__ | 
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timegranularityspec"]
==== TimeGranularitySpec 

TimeGranularitySpec represents the granularity object

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-timefieldspec[$$TimeFieldSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`name`* __string__ | Name of the time granularity specification
| *`dataType`* __string__ | 
| *`typeType`* __string__ | TimeType is one of  TimeUnit enum values. e.g. HOURS , MINUTES etc. If your date is not in EPOCH format, this value is not used and can be set to MILLISECONDS or any other unit.
| *`timeUnitSize`* __integer__ | TimeUnitSize is multiplied to the value present in the time column to get an actual timestamp. eg: if timesize is 5 and value in time column is 4996308 minutes. The value that will be converted to epoch timestamp will be 4996308 * 5 * 60 * 1000 = 1498892400000 milliseconds. If your date is not in EPOCH format, this value is not used and can be set to 1 or any other integer.
| *`timeFormat`* __string__ | TimeFormat can be either EPOCH or SIMPLE_DATE_FORMAT. If it is SIMPLE_DATE_FORMAT, the pattern string is also specified. 
 Here are some sample date-time formats you can use in the schema: 1:MILLISECONDS:EPOCH - used when timestamp is in the epoch milliseconds and stored in LONG format 1:HOURS:EPOCH - used when timestamp is in the epoch hours and stored in LONG  or INT format 1:DAYS:SIMPLE_DATE_FORMAT:yyyy-MM-dd - when date is in STRING format and has the pattern year-month-date. e.g. 2020-08-21 1:HOURS:SIMPLE_DATE_FORMAT:EEE MMM dd HH:mm:ss ZZZ yyyy - when date is in STRING format. e.g. s Mon Aug 24 12:36:50 America/Los_Angeles 2019
|===


[id="{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-zookeeperconfiguration"]
==== ZookeeperConfiguration 

ZookeeperConfiguration defines the desired state of Zookeeper

.Appears In:
****
- xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-pinotspec[$$PinotSpec$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`image`* __string__ | Image is the name of the Apache Zookeeper docker image
| *`replicaCount`* __integer__ | ReplicaCount is the number of nodes in the zookeeper service. Each node is deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are tested. This value should be an odd number to ensure the resultant cluster can establish exactly one quorum of nodes in the event of a fragmenting network partition.
| *`resources`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core[$$ResourceRequirements$$]__ | The desired compute resource requirements of Pods in the cluster.
| *`storage`* __xref:{anchor_prefix}-github-com-spaghettifunk-pinot-operator-api-pinot-v1alpha1-zookeeperstorage[$$zookeeperStorage$$]__ | Defines the inner parameters for setting up the storage
| *`jvmOptions`* __string__ | Extra JVM parameters to be passed to the zookeeper service
|===


